version: '3.8'

services:
  webserver:
    platform: linux/arm64
    container_name: oppia-webserver
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    volumes:
      - shared_root_dir:/app/oppia
    environment:
      - production=false
      - NODE_ENV=development
      - oppia_is_dockerized=true
    healthcheck:
      test: test "$(ls -A /app/oppia/dist)" || exit 1
      timeout: 30s
      interval: 30s
      retries: 5
      start_period: 20m
    command: >
      sh -c '
        trap "rm /app/oppia/node_modules/@angular/compiler-cli/ngcc/__ngcc_lock_file__" EXIT;

        if [ "$prod_env" = "true" ]; then
          if [ "$source_maps" = "true" -a "$maintenance_mode" = "true" ]; then
            python3 -m scripts.build --prod_env --maintenance_mode --source_maps
          elif [ "$maintenance_mode" = "true" ]; then
            python3 -m scripts.build --prod_env --maintenance_mode
          elif [ "$source_maps" = "true" ]; then
            python3 -m scripts.build --prod_env --source_maps
          else
            python3 -m scripts.build --prod_env
          fi

          /app/oppia/node_modules/.bin/ng build --prod
        else
          /app/oppia/node_modules/.bin/ng build --watch
        fi
      '
#       python3 -m scripts.build \
# +              --prod_env \
# +              $${maintenance_mode="true" : +--maintenance_mode} \
# +              $${source_maps="true" : +--source_maps}

  webpack-compiler:
    platform: linux/arm64
    container_name: oppia-webpack-compiler
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    volumes:
      - shared_root_dir:/app/oppia
    environment:
      - oppia_is_dockerized=true
    healthcheck:
      test: test "$(ls -A /app/oppia/webpack_bundles)" || exit 1
      timeout: 30s
      interval: 30s
      retries: 5
      start_period: 20m
    command: >
      sh -c '
        if [ "$prod_env" = "true" ]; then
          if [ "$source_maps" = "true" ]; then
            node --max-old-space-size=8192 /app/oppia/node_modules/webpack/bin/webpack.js --config /app/oppia/webpack.prod.sourcemap.config.ts
          else
            node --max-old-space-size=8192 /app/oppia/node_modules/webpack/bin/webpack.js --config /app/oppia/webpack.prod.config.ts
          fi
        else
          if [ "$source_maps" = "true" ]; then
            node /app/oppia/node_modules/webpack/bin/webpack.js --config /app/oppia/webpack.dev.sourcemap.config.ts --watch --color --progress
          else
            node /app/oppia/node_modules/webpack/bin/webpack.js --config /app/oppia/webpack.dev.config.ts --watch --color --progress
          fi
        fi
      '
#       +  #     sh -c '
#   #       if [ "$prod_env" = "true" ]; then
#   #         node --max-old-space-size=8192 \
#   #         /app/oppia/node_modules/webpack/bin/webpack.js \
#   #         --config $( [ "$source_maps" = "true" ] && echo "/app/oppia/webpack.prod.sourcemap.config.ts" || echo "/app/oppia/webpack.prod.config.ts" )
#   #       else
#   #         node /app/oppia/node_modules/webpack/bin/webpack.js \
#   #         --config $( [ "$source_maps" = "true" ] && echo "/app/oppia/webpack.dev.sourcemap.config.ts" || echo "/app/oppia/webpack.dev.config.ts" ) \
#   #         --watch \
#   #         --color \
#   #         --progress
#   #       fi
#   #     '

  google_app_engine:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.google_cloud_sdk
    container_name: oppia-app-engine
    ports:
      - "8181:8181"
      - "8000:8000"
    volumes:
      - shared_root_dir:/app/oppia
    environment:
      - CLOUDSDK_CORE_DISABLE_PROMPTS=1
      - oppia_is_dockerized=true
    depends_on:
      webserver:
        condition: service_healthy
      webpack-compiler:
        condition: service_healthy
      datastore:
        condition: service_healthy
      firebase:
        condition: service_healthy
      redis:  
        condition: service_healthy
      elasticsearch:  
        condition: service_healthy
    healthcheck:
      test: curl -f http://localhost:8181/ || exit 1
      timeout: 10s
      interval: 30s
      retries: 5
      start_period: 20m
    command: >
      sh -c '
        if [ "$prod_env" = "true" ]; then
          /google-cloud-sdk/bin/dev_appserver.py /app/oppia/app.yaml --runtime python38 --host=0.0.0.0 --port=8181 --admin_host=0.0.0.0 --admin_port=8000 --skip_sdk_update_check=True
        else
          /google-cloud-sdk/bin/dev_appserver.py /app/oppia/app_dev.yaml --runtime python38 --host=0.0.0.0 --port=8181 --admin_host=0.0.0.0 --admin_port=8000 --skip_sdk_update_check=True
        fi
      '
#       command: >
# +  #     sh -c '
# +  #       /google-cloud-sdk/bin/dev_appserver.py \
# +  #       $( [ "$prod_env" = "true" ] && echo "/app/oppia/app.yaml" || echo "/app/oppia/app_dev_docker.yaml" ) \
# +  #       --runtime python38 \
# +  #       --host=0.0.0.0 \
# +  #       --port=8181 \
# +  #       --admin_host=0.0.0.0 \
# +  #       --admin_port=8000 \
# +  #       --skip_sdk_update_check=True
# +  #     '

  datastore:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.google_cloud_sdk
    container_name: oppia-cloud-datastore
    ports:
      - "8089:8089"
    volumes:
      - shared_root_dir:/app/oppia
    environment:
      - DATASTORE_DATASET=dev-project-id
      - DATASTORE_EMULATOR_HOST=0.0.0.0:8089
      - DATASTORE_EMULATOR_HOST_PATH=0.0.0.0:8089/datastore
      - DATASTORE_HOST=http://0.0.0.0:8089
      - DATASTORE_PROJECT_ID=dev-project-id
      - DATASTORE_USE_PROJECT_ID_AS_APP_ID=true
      - GOOGLE_CLOUD_PROJECT=dev-project-id
      - CLOUDSDK_CORE_DISABLE_PROMPTS=1
      - oppia_is_dockerized=true
    depends_on:
      webserver:
        condition: service_healthy
      webpack-compiler:
        condition: service_healthy
    healthcheck:
      test: curl -f http://localhost:8089/ || exit 1
      timeout: 10s
      interval: 2m
      retries: 5
      start_period: 20m
    command: >
      sh -c '
        if [ "$save_datastore" = "true" ]
        then
          /google-cloud-sdk/bin/gcloud beta emulators datastore start --project dev-project-id --data-dir /app/cloud_datastore_emulator_cache --host-port 0.0.0.0:8089 --consistency=1.0 --quiet
        else
          if [ -d /app/cloud_datastore_emulator_cache ]
          then
            rm -rf /app/cloud_datastore_emulator_cache
          fi
          /google-cloud-sdk/bin/gcloud beta emulators datastore start --project dev-project-id --data-dir /app/cloud_datastore_emulator_cache --host-port 0.0.0.0:8089 --consistency=1.0 --quiet --no-store-on-disk
        fi
      '
#       command: >
# +  #     sh -c '
# +  #       if [ "$save_datastore" != "true" ]
# +  #       then
# +  #         rm -rf /app/cloud_datastore_emulator_cache || true
# +  #       fi
# +  #         /google-cloud-sdk/bin/gcloud beta emulators datastore start \
# +  #         --project dev-project-id \
# +  #         --data-dir /app/cloud_datastore_emulator_cache \
# +  #         --host-port 0.0.0.0:8089 \
# +  #         --consistency=1.0 \
# +  #         --quiet \
# +  #         ${save_datastore != "true":+--no-store-on-disk}
# +  #     '

  firebase:
    image: node:16.13.0-alpine
    container_name: oppia-firebase-emulator
    ports:
      - "9099:9099"
      - "4000:4000"
    volumes:
      - shared_root_dir:/app/oppia
    healthcheck:
      test: wget --spider http://localhost:4000/auth/ && echo 'y' | /app/oppia/node_modules/firebase-tools/lib/bin/firebase.js emulators:export /app/firebase_emulator_cache --project=dev-project-id || exit 1
      timeout: 20s
      interval: 20s
      retries: 5
    environment:
      - oppia_is_dockerized=true
    depends_on:
      elasticsearch:
        condition: service_healthy
    command: >
      sh -c '
        /app/oppia/node_modules/firebase-tools/lib/bin/firebase.js \
        emulators:start \
        --only auth \
        --project=dev-project-id \
        --config=/app/oppia/.firebase.json \
        ${save_datastore:+ --import=/app/firebase_emulator_cache} \
        --export-on-exit=/app/firebase_emulator_cache
      '  

  redis:
    image: redis:7.0-alpine
    container_name: oppia-redis
    ports:
      - "6379:6379"
    environment:
      - PATH=/usr/local/bin/
      - oppia_is_dockerized=true
    healthcheck:
      test: redis-cli ping
      timeout: 5s
      interval: 30s
      retries: 5
    volumes:
      - shared_root_dir:/app/oppia
    command: redis-server --bind 0.0.0.0 --port 6379 --save "60 1" --tcp-keepalive 300 --dbfilename dump.rdb --dir /app/oppia/ --rdbcompression yes

  elasticsearch:
    image: elasticsearch:7.17.0
    container_name: oppia-elasticsearch
    ports:
      - "9200:9200"
    volumes:
      - shared_root_dir:/app/oppia
    environment:
      - ES_JAVA_OPTS=-Xms100m -Xmx500m
      - ES_PATH_CONF=/usr/share/elasticsearch/config
      - discovery.type=single-node
      - oppia_is_dockerized=true
    depends_on:
      datastore:
        condition: service_healthy
    healthcheck:
      test: curl -f http://localhost:9200/ || exit 1
      timeout: 10s
      interval: 1m
      retries: 5
      start_period: 20m
    command: elasticsearch -q

volumes:
  shared_root_dir:
